# LAMMPS input script for simulating a disc in chiral ABPs bath

shell       mkdir out
log         out/loginit.out
variable    seed index 12345

# settings
variable    rho equal 0.50   # density
variable    L equal 50        # Simulation box size
variable    L2 equal $L/2
variable    Nabp equal round(${rho}*$L^2)
variable    k equal 0.08
variable    nsin equal 3
variable    delta_k equal 0.3
variable    mass equal 400.0 
variable    mu_x equal 1
variable    Dx equal 0
variable    v0 equal 1
variable    lp equal 10
variable    lr equal 5 
variable    chirality equal -1  # +1 for CCW ABPs, -1 for CW
variable    Bq equal 1  # Lorentz force magnitude (magnetic field times charge)
# -*-*-*-*-*-*--*-*-*--*-*-*-
variable    Dtheta equal ${v0}/${lp}
variable    omega equal ${chirality}*${v0}/${lr}
variable    gamma_x equal 1/${mu_x}
variable    sigma equal 2
variable    rcut equal ${sigma}*2^(1.0/6.0)  # for WCA posuntial
variable    dt equal 0.005

variable    s equal 40       # Nevery
variable    p equal 10000       # Nevery
variable    d equal 400000       # Nevery
variable    sgk equal 10+ceil(100*${mass})       # Nevery -- add balistic time, then diffusive time scales with mass
variable    pgk equal 2000                   # Nrepeat
variable    dgk equal ${sgk}*${pgk}           # Nfreq

# problem setup
units       lj
dimension   2
atom_style  bond
neigh_modify    delay 0 every 1
# newton          on off
# comm_modify     vel yes cutoff 10 # Increase cutoff
atom_modify     map yes # Create atom map to be able to index into atom positions and velocities


# Make ABPs:
lattice         sq ${rho}  # Set the lattice density for ABPs.
region          simbox block -${L2} ${L2} -${L2} ${L2} -0.1 0.1 units box # Box units, rather than lattice
create_box      2 simbox &
                bond/types 1 &
                extra/bond/per/atom 1
create_atoms    2 single 10 0 0 # Insert disc obstacle
create_atoms    1 random ${Nabp} ${seed} NULL overlap 2 maxtry 100 # Insert passive tracers randomly

group           abp type 1
group           disc type 2


# Write out the simulation parameters for post-processing:
variable        ly equal ly
variable        lx equal lx
print           '{'                                 file   params.json
print           '   "mass": ${mass},'       append params.json
print           '   "k": ${k},'       append params.json
print           '   "rho": ${rho},'                 append params.json
print           '   "lx": ${lx},'                   append params.json
print           '   "ly": ${ly},'                   append params.json
print           '   "Dtheta": ${Dtheta},'           append params.json
print           '   "v0":${v0},'                    append params.json
print           '   "lp": ${lp},'                   append params.json
print           '   "lr": ${lr},'                   append params.json
print           '   "gamma_x":${gamma_x},'          append params.json
print           '   "Dx":${Dx},'                    append params.json
print           '   "omega":${omega},'              append params.json
print           '   "rcut": ${rcut},'               append params.json
print           '   "dt": ${dt},'                   append params.json
print           '   "s": $s,'                   append params.json
print           '   "sgk": ${sgk},'                   append params.json
print           '}'                                 append params.json

# Define interactions
pair_style      lj/cut 1
pair_modify     shift yes
pair_coeff      * * 0 0
pair_coeff      1 2 1 ${sigma} ${rcut}
# pair_coeff      1 1 1 0
# pair_coeff      * * 1 ${sigma} ${rcut} # Everything interacts
mass            1 1.0
mass            2 ${mass}  # Mass of one bead in the disc particle
delete_atoms    overlap 0.5 abp disc  # NOW: Delete ABPs overlapping the disc object (with random rotation)


# Define fixes that affect dynamics:

# * * * * cABP Bath * * * *
fix             1 abp property/atom d_thetavec  # Initialize vector of directors (this gets used inside fix abp)
fix             2 abp abp ${Dx} ${Dtheta} ${gamma_x} ${omega} ${v0} ${seed} # DX DTHETA GAMMA_X OMEGA V0 SEED
variable        theta_init atom random(0,2*PI,${seed})
set             atom * d_thetavec v_theta_init  # Initialize ABPs with random directions

# * * * * Eqbm Lorentz Bath * * * *
# variable        fxlorentz atom -v_Bq*vy
# variable        fylorentz atom v_Bq*vx
# fix             lorentz abp addforce v_fxlorentz v_fylorentz 0
# fix             1 abp langevin 1.0 1.0 10.0 94609 # add a weak thermostat
# fix             2 abp nve
# velocity        all create 1 94609

# * * * * Disc dynamics * * * *
fix             3 disc nve # Unfixed disc (comment to immobilize)
fix             2d all enforce2d

# Harmonic:
variable        fxharm atom -2*v_k*x
variable        fyharm atom -2*v_k*y
fix             well disc addforce v_fxharm v_fyharm 0

# Harmonic sinusoidal:
# variable        theta atom atan2(y,x)
# variable        ksin atom $k+${delta_k}*(cos(${nsin}*v_theta))^2
# variable        fxharm atom -2*v_ksin*x
# variable        fyharm atom -2*v_ksin*y
# fix             well disc addforce v_fxharm v_fyharm 0



# Equilibration run
write_dump      all xyz init.xyz
thermo          1000
thermo_style    custom step temp press cpu spcpu density lx
timestep        ${dt}
run             1000000
write_dump      all xyz eq.xyz

# Production run:
label           production_run
log             out/log.out
timestep        ${dt}


# Analysis

# Dynamical Teff:
variable        x equal x[1]
variable        y equal y[1]
variable        vx equal vx[1]
variable        vy equal vy[1]
variable        fx equal fx[1]
variable        fy equal fy[1]
variable        v2 equal vx[1]^2+vy[1]^2
variable        Teff equal .5*v_mass*(vx[1]^2+vy[1]^2)
# fix             dyncorr disc ave/correlate ${sgk} ${pgk} ${dgk} v_vx v_vy &
#                 type full ave running overwrite file out/dyncorr.out
fix             Teff_avg disc ave/time 10 1000 10000 &
                v_Teff &
                ave running overwrite file out/Teff_avg.out

compute         ccgrid disc chunk/atom bin/2d x center .2 y center .2 units box #x -25 25 bound y -25 25
fix             6 disc ave/chunk $s $p $d ccgrid&
                density/number vx vy fx fy &
                ave running overwrite file out/avegrid.out

fix             histo disc ave/histo 10 1000 10000 0 10 500 v_v2 file out/histo.out ave running overwrite

fix             vtraj disc print 10 "${x} ${y} ${vx} ${vy} ${fx} ${fy}" file out/vtraj.out screen no

# dump            traj disc xyz 100 out/traj.xyz
# dump            traj all xyz 10 out/traj.xyz
thermo_style    custom step temp press cpu spcpu
thermo          10000
run             1000000000
write_dump      all xyz final.xyz
